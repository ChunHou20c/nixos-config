;; main window
(defwindow powermenu
  :monitor 0 ;; Optional for X11
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
              :width "100%"
              :height "100%"
	    )
    (powermenu_layout)
)

;; main layout
(defwidget powermenu_layout [] (

  box :class "layout_box" :space-evenly false :orientation "vertical"
    :style "background-image: url('./bg.jpg')"

    (right_widget)
    (box :space-evenly false :hexpand true :vexpand true
      (time_widget :hour {time.hour} :minute {time.min})
      (power_buttons)
    )
  )
)

(defwidget power_buttons [] (
  box :class "btn_box" 
  :space-evenly false 
  :halign "end" :valign "end" 
  :spacing 5
  :vexpand true :hexpand true
  
    (button :class "power-btn" :onclick "poweroff" "󰐥")
    (button :class "power-btn" :onclick "reboot" "󰑐")
    (button :class "power-btn" :onclick "hyprctl dispatch exit" "󰍃")
  
))

(defwidget right_widget [] (

  box :class "widget_box"
  :space-evenly false 
  :halign "end" :valign "start" 
  :spacing 5
  :vexpand true :hexpand true

    (sundial)
    (label :text "|" :class "sep")
    (network :ssid "${net.ssid}" :strength "${net.signal}" :offline "󰤭" :excellent "󰤨" :good "󰤥" :okay "󰤢" :slow "󰤟")
    (label :text "|" :class "sep")
    (battery :capacity {EWW_BATTERY.BAT1.capacity} :status {EWW_BATTERY.BAT1.status} 
      :charge_icon "󰂄" 
      :one "󰂂" :two "󰂁" :three "󰂀" :four "󰁿" :five "󰁾" 
      :six "󰁽" :seven "󰁼" :eight "󰁻" :nine "󰁺")
    (label :text "|" :class "sep")
    (button :class "close-btn" :onclick "eww close powermenu; eww open status_bar " "󰅖")
  
))

(defwidget sundial []
  (label :class "sundial-lbl" :halign "end" :hexpand true
         :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
               time.hour <= 5 ? "Dawn" :
               time.hour >= 6 &&
                (time.hour <= 8 &&
                  time.min <= 59) ? "Morning" :
               time.hour >= 9 &&
                (time.hour <= 11 && time.min <= 59)
                ? "Late Morning" :
               time.hour == 12 && time.min <= 29 ? "Midday" :
               time.hour >= 12 && time.hour <= 16 ? "Afternoon" :
               time.hour > 16 && time.hour <= 17 ?
                "Late Afternoon" :
               (time.hour >= 17 && time.min <= 1)
                || (time.hour <= 18 && time.min <= 20) ?
                  "Early Evening" :
               time.hour >= 18 && time.hour <= 19 ? "Dusk" :
               time.hour > 19 && time.hour <= 21 ? "Late Evening" :
               time.hour > 21 ? "Night" : "Midnight"}))

(defwidget battery [capacity status one two three
                    four five six seven eight nine charge_icon]
  (box :class "bat-box" :space-evenly false :spacing 8
    (label :text {status == 'Charging' ? charge_icon :
      capacity < 20 ? nine :
	capacity < 30 ? eight :
	  capacity < 40 ? seven :
	    capacity < 50 ? six :
	      capacity < 60 ? five :
		capacity < 70 ? four :
		  capacity < 80 ? three :
		    capacity < 90 ? two : one})
    (label :text "${capacity} %")
  ))

(defwidget network [ssid strength offline excellent
                    good okay slow]
  (box :class "net-box"
       :space-evenly false
       :spacing 12
    (label :text {strength == "" ? offline :
      strength < 26 ? slow :
        strength < 51 ? okay :
          strength < 76 ? good : excellent})
    (label :text ssid)
  ))

(defwidget time_widget [hour minute] (
  box :class "time-box" :space-evenly false
    :halign "start" 
    :valign "end"
    :spacing 5
    :vexpand true :hexpand true
      (box :class "hour-box" :space-evenly false
	:halign "start" :valign "end" :vexpand true :hexpand true 
	(label :text hour)
      )
      (box :class "minute-box" :space-evenly false
	:halign "end" :valign "start" :vexpand true :hexpand true 
	(label :text minute)
      )
  
))
